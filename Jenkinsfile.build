pipeline {
    agent {
        label 'az-plug' 
    }
    
    options {
        ansiColor('xterm')
        timestamps()
        timeout(time: 30, unit: 'MINUTES')
        buildDiscarder(logRotator(numToKeepStr: '5'))
    }
    
    stages {
        stage('üîç Check Environment') {
            steps {
                script {
                    sh 'docker version'
                    sh 'docker compose version'
                }
            }
        }
        
        stage('üèóÔ∏è Build Stage version') {
            steps {
                script {
                    sh """
                        docker compose --progress=plain --profile full build --no-cache
                    """
                }
            }
        }
        
        stage('üöÄ Docker UP') {
            steps {
                script {
                    sh 'docker compose --profile full up -d'
                    sh 'docker ps'
                }
            }
        }
        
        stage('üåê Network Check') {
            steps {
                script {
                    sh '''
                        echo "Agent Public IP:"
                        curl -s ifconfig.me
                        
                        echo "\nContainer Network Details:"
                        docker network ls
                        docker network inspect bridge
                        
                        echo "\nRunning Containers:"
                        docker ps -a
                    '''
                }
            }
        }
        stage('Manual Approval') {
            steps {
                script {
                    timeout(time: 1, unit: 'DAYS') { 
                        input message: 'Proceed with deployment?', ok: 'Proceed'
                    }
                }
            }
        }
    }
    
    post {
        success {
            echo 'üéâ Pipeline completed successfully!'
        }
        // failure {
        //     echo 'üí• Pipeline failed'
        //     sh 'docker compose -f docker-compose.yml down || true'
        //     sh '''
        //         docker system prune -f
        //         docker volume prune -f
        //     '''
        // }
    }
}
